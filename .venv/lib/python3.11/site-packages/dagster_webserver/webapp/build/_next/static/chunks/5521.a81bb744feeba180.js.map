{"version":3,"file":"static/chunks/5521.a81bb744feeba180.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx"],"sourcesContent":["import 'codemirror/addon/search/searchcursor';\n\nimport {\n  Box,\n  Code,\n  Colors,\n  Heading,\n  PageHeader,\n  Spinner,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport CodeMirror from 'codemirror';\nimport {memo, useContext, useMemo} from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {gql, useQuery} from '../apollo-client';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .CodeMirror.cm-s-instance-config.cm-s-instance-config {\n    background-color: ${Colors.backgroundDefault()};\n    box-shadow: 0 1px 0 ${Colors.keylineDefault()};\n    color: ${Colors.textDefault()};\n    height: 100%;\n\n    .config-highlight.config-highlight {\n      background-color: ${Colors.backgroundLimeHover()};\n    }\n  }\n`;\n\nexport const InstanceConfigContent = memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const handlers = useMemo(() => {\n    return {\n      onReady: (editor: CodeMirror.Editor) => {\n        const documentHash = document.location.hash;\n        if (documentHash) {\n          const target = new RegExp(`^${documentHash.slice(1)}:`);\n          const cursor = editor.getSearchCursor(target);\n          const found = cursor.findNext();\n          if (found) {\n            editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n            editor.scrollIntoView(cursor.from());\n          }\n        }\n      },\n    };\n  }, []);\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border=\"bottom\"\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n        <QueryRefreshCountdown refreshState={refreshState} />\n      </Box>\n      {/* Div wrapper on CodeMirror to allow entire page to scroll */}\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <StyledRawCodeMirror\n          value={config || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          handlers={handlers}\n          theme={['instance-config']}\n        />\n      </div>\n    </>\n  );\n});\n\nexport const InstanceConfigRoot = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"config\" />} />\n      <InstanceConfigContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfigRoot;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Colors, Icon} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const InstanceWarningIcon = memo(() => {\n  const {daemons} = useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Spinner, Tooltip} from '@dagster-io/ui-components';\nimport {memo, useContext} from 'react';\n\nimport {WarningTooltip} from './WarningTooltip';\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nexport const WorkspaceStatus = memo(({placeholder}: {placeholder: boolean}) => {\n  const {codeLocations} = useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.accentGray()} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.accentYellow()} />\n    </WarningTooltip>\n  );\n});\n","import {Box, Tabs} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\nimport {QueryResult} from '../apollo-client';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '../apollo-client';\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const queryResult = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!queryResult.data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n"],"names":["InstanceConfigStyle","createGlobalStyle","Colors","InstanceConfigContent","memo","useTrackPageView","useDocumentTitle","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","handlers","useMemo","onReady","documentHash","document","location","hash","target","slice","cursor","editor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","Box","padding","vertical","horizontal","border","flex","direction","alignItems","justifyContent","Subheading","Code","style","fontSize","version","QueryRefreshCountdown","div","overflow","StyledRawCodeMirror","value","options","readOnly","lineNumbers","mode","theme","Spinner","purpose","InstanceConfigRoot","pageTitle","useContext","InstancePageContext","PageHeader","title","Heading","tabs","InstanceTabs","tab","__webpack_exports__","gql","InstanceWarningIcon","daemons","DeploymentStatusContext","jsx_runtime","WarningTooltip","content","position","modifiers","offset","enabled","Icon","name","color","WorkspaceStatus","placeholder","param","codeLocations","type","Tooltip","placement","fillColor","width","props","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","id","icon","bottom","INSTANCE_CONFIG_HAS_INFO","hasInfo"],"sourceRoot":""}