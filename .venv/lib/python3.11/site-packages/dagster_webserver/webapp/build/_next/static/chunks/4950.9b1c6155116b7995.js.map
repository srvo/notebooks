{"version":3,"file":"static/chunks/4950.9b1c6155116b7995.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/snapshots/SnapshotNav.tsx","webpack://_N_E/../ui-core/src/snapshots/SnapshotRoot.tsx"],"sourcesContent":["import {FontFamily, Heading, PageHeader, Tabs, Tag} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {SnapshotQuery, SnapshotQueryVariables} from './types/SnapshotNav.types';\nimport {ExplorerPath, explorerPathToString} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext/util';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: ExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId = ''} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const queryResult = useQuery<SnapshotQuery, SnapshotQueryVariables>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const {data, loading} = queryResult;\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <PageHeader\n      title={\n        <Heading style={{fontFamily: FontFamily.monospace, fontSize: '16px'}}>\n          {explorerPath.snapshotId?.slice(0, 8)}\n        </Heading>\n      }\n      tags={\n        <>\n          <Tag icon=\"schema\">\n            Snapshot of{' '}\n            <Link to={workspacePipelinePathGuessRepo(explorerPath.pipelineName)}>\n              {explorerPath.pipelineName}\n            </Link>\n          </Tag>\n          {tag()}\n        </>\n      }\n      tabs={\n        <Tabs selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <TabLink key={text} id={pathComponent} title={text} to={href} />;\n          })}\n        </Tabs>\n      }\n    />\n  );\n};\n","import {Switch, useParams} from 'react-router-dom';\nimport {PipelineExplorerSnapshotRoot} from 'shared/pipelines/PipelineExplorerRoot.oss';\n\nimport {SnapshotNav} from './SnapshotNav';\nimport {Route} from '../app/Route';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsRoot} from '../pipelines/PipelineRunsRoot';\n\nexport const SnapshotRoot = () => {\n  const {pipelinePath, tab} = useParams<{\n    pipelinePath: string;\n    tab?: string;\n  }>();\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route path=\"/snapshots/:pipelinePath/runs\">\n          <PipelineRunsRoot />\n        </Route>\n        <Route path=\"/snapshots/(/?.*)\">\n          <PipelineExplorerSnapshotRoot />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SnapshotRoot;\n"],"names":["SNAPSHOT_PARENT_QUERY","gql","SnapshotNav","activeTab","explorerPath","props","pipelineName","snapshotId","explorerPathString","explorerPathToString","opNames","currentPipelineState","useActivePipelineForName","currentSnapshotID","pipelineSnapshotId","data","loading","useQuery","variables","tabs","text","pathComponent","href","jsx_runtime","jsx","PageHeader","title","Heading","style","fontFamily","FontFamily","monospace","fontSize","slice","tags","jsxs","Fragment","Tag","icon","Link","to","workspacePipelinePathGuessRepo","intent","minimal","pipelineSnapshotOrError","__typename","parentSnapshotId","Tabs","selectedTabId","map","tab","TabLink","id","SnapshotRoot","pipelinePath","useParams","explorerPathFromString","div","display","flexDirection","minWidth","width","height","Switch","Route","path","PipelineRunsRoot","PipelineExplorerSnapshotRoot","snapshots_SnapshotRoot"],"sourceRoot":""}